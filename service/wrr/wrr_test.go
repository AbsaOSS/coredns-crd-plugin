package wrr

/*
Copyright 2022 The k8gb Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

Generated by GoLic, for more details see: https://github.com/AbsaOSS/golic
*/

import (
	"context"
	"testing"

	"github.com/AbsaOSS/k8s_crd/common/mocks"
	"github.com/golang/mock/gomock"
	"github.com/miekg/dns"
	"github.com/stretchr/testify/assert"
)

// TODO: combina A, AAA, MX CNAme records
type fakeWriter struct {
	w dns.ResponseWriter
}

func newFakeWriter(ctrl *gomock.Controller, f func(w *mocks.MockResponseWriter)) fakeWriter {
	w := mocks.NewMockResponseWriter(ctrl)
	f(w)
	return fakeWriter{
		w: w,
	}
}

func TestWeightRoundRobin(t *testing.T) {
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()

	tests := []struct {
		name          string
		msg           *dns.Msg
		writer        fakeWriter
		expectedError bool
	}{
		{
			name:          "Serve empty answers",
			msg:           &dns.Msg{},
			writer:        newFakeWriter(ctrl, func(w *mocks.MockResponseWriter) {}),
			expectedError: false,
		},
	}
	for _, test := range tests {
		t.Run(test.name, func(t *testing.T) {
			wrr := NewWeightRoundRobin()
			code, err := wrr.ServeDNS(context.TODO(), test.writer.w, test.msg)
			assert.Equal(t, dns.RcodeSuccess, code)
			assert.Equal(t, test.expectedError, err != nil)
		})
	}
}
